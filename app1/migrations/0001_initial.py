# Generated by Django 3.0.8 on 2020-07-24 06:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('edit_mode', models.CharField(blank=True, max_length=32, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('link_to', models.CharField(blank=True, max_length=512, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=128, null=True)),
                ('style', models.CharField(blank=True, max_length=32, null=True)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('order_number', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('comment_status', models.IntegerField(blank=True, null=True)),
                ('comment_count', models.PositiveIntegerField(blank=True, null=True)),
                ('comment_time', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('flag', models.CharField(blank=True, max_length=256, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=512, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=512, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.PositiveIntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=128, null=True)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('style', models.CharField(blank=True, max_length=32, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('icon', models.CharField(blank=True, max_length=128, null=True)),
                ('count', models.PositiveIntegerField(blank=True, null=True)),
                ('order_number', models.IntegerField(blank=True, null=True)),
                ('flag', models.CharField(blank=True, max_length=256, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=256, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=256, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleCategoryMapping',
            fields=[
                ('article_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('category_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'article_category_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.PositiveIntegerField(blank=True, null=True)),
                ('article_id', models.PositiveIntegerField(blank=True, null=True)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('wechat', models.CharField(blank=True, max_length=64, null=True)),
                ('qq', models.CharField(blank=True, max_length=32, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('reply_count', models.PositiveIntegerField(blank=True, null=True)),
                ('order_number', models.PositiveIntegerField(blank=True, null=True)),
                ('vote_up', models.PositiveIntegerField(blank=True, null=True)),
                ('vote_down', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=512, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=128, null=True)),
                ('suffix', models.CharField(blank=True, max_length=32, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('flag', models.CharField(blank=True, max_length=256, null=True)),
                ('order_number', models.IntegerField(blank=True, null=True)),
                ('accessible', models.IntegerField()),
                ('created', models.DateField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.PositiveIntegerField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.CharField(blank=True, max_length=512, null=True)),
                ('target', models.CharField(blank=True, max_length=32, null=True)),
                ('icon', models.CharField(blank=True, max_length=64, null=True)),
                ('flag', models.CharField(blank=True, max_length=32, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('order_number', models.IntegerField(blank=True, null=True)),
                ('relative_table', models.CharField(blank=True, max_length=32, null=True)),
                ('relative_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('trx_no', models.CharField(max_length=50, unique=True)),
                ('trx_type', models.CharField(blank=True, max_length=30, null=True)),
                ('trx_nonce_str', models.CharField(blank=True, max_length=64, null=True)),
                ('payer_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('payer_name', models.CharField(blank=True, max_length=256, null=True)),
                ('payer_fee', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('order_ip', models.CharField(blank=True, max_length=30, null=True)),
                ('order_referer_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('order_from', models.CharField(blank=True, max_length=30, null=True)),
                ('pay_status', models.IntegerField(blank=True, null=True)),
                ('pay_type', models.CharField(blank=True, max_length=50, null=True)),
                ('pay_bank_type', models.CharField(blank=True, max_length=128, null=True)),
                ('pay_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('pay_success_amount', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('pay_success_time', models.DateTimeField(blank=True, null=True)),
                ('pay_complete_time', models.DateTimeField(blank=True, null=True)),
                ('refund_no', models.CharField(blank=True, max_length=64, null=True)),
                ('refund_desc', models.CharField(blank=True, max_length=256, null=True)),
                ('refund_time', models.DateTimeField(blank=True, null=True)),
                ('thirdparty_appid', models.CharField(blank=True, max_length=32, null=True)),
                ('thirdparty_mch_id', models.CharField(blank=True, max_length=32, null=True)),
                ('thirdparty_trade_type', models.CharField(blank=True, max_length=16, null=True)),
                ('thirdparty_transaction_id', models.CharField(blank=True, max_length=32, null=True)),
                ('thirdparty_user_openid', models.CharField(blank=True, max_length=64, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('field1', models.CharField(blank=True, max_length=1024, null=True)),
                ('field2', models.CharField(blank=True, max_length=1024, null=True)),
                ('field3', models.CharField(blank=True, max_length=1024, null=True)),
                ('field4', models.CharField(blank=True, max_length=1024, null=True)),
                ('field5', models.CharField(blank=True, max_length=1024, null=True)),
                ('field6', models.CharField(blank=True, max_length=1024, null=True)),
                ('field7', models.CharField(blank=True, max_length=1024, null=True)),
                ('field8', models.CharField(blank=True, max_length=1024, null=True)),
                ('field9', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'payment_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_key', models.CharField(max_length=512)),
                ('node', models.CharField(max_length=512)),
                ('type', models.CharField(max_length=32)),
                ('text', models.CharField(blank=True, max_length=1024, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('flag', models.CharField(blank=True, max_length=64, null=True)),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolePermissionMapping',
            fields=[
                ('role_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('permission_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'role_permission_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SinglePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('edit_mode', models.CharField(blank=True, max_length=32, null=True)),
                ('link_to', models.CharField(blank=True, max_length=512, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('thumbnail', models.CharField(blank=True, max_length=128, null=True)),
                ('style', models.CharField(blank=True, max_length=32, null=True)),
                ('flag', models.CharField(blank=True, max_length=32, null=True)),
                ('status', models.CharField(max_length=32)),
                ('view_count', models.PositiveIntegerField()),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=512, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=512, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'single_page',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('nickname', models.CharField(blank=True, max_length=128, null=True)),
                ('realname', models.CharField(blank=True, max_length=128, null=True)),
                ('identity', models.CharField(blank=True, max_length=128, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('salt', models.CharField(blank=True, max_length=32, null=True)),
                ('anonym', models.CharField(blank=True, max_length=32, null=True)),
                ('wx_openid', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('wx_unionid', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('qq_openid', models.CharField(blank=True, max_length=64, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('email_status', models.CharField(blank=True, max_length=32, null=True)),
                ('mobile', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('mobile_status', models.CharField(blank=True, max_length=32, null=True)),
                ('gender', models.CharField(blank=True, max_length=16, null=True)),
                ('signature', models.CharField(blank=True, max_length=2048, null=True)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('company', models.CharField(blank=True, max_length=256, null=True)),
                ('occupation', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=128, null=True)),
                ('site', models.CharField(blank=True, max_length=256, null=True)),
                ('graduateschool', models.CharField(blank=True, max_length=256, null=True)),
                ('education', models.CharField(blank=True, max_length=256, null=True)),
                ('avatar', models.CharField(blank=True, max_length=256, null=True)),
                ('idcardtype', models.CharField(blank=True, max_length=128, null=True)),
                ('idcard', models.CharField(blank=True, max_length=128, null=True)),
                ('remark', models.CharField(blank=True, max_length=512, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('create_source', models.CharField(blank=True, max_length=128, null=True)),
                ('logged', models.DateTimeField(blank=True, null=True)),
                ('activated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCategoryMapping',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('category_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'user_category_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRoleMapping',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('role_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'user_role_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Utm',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('anonym', models.CharField(blank=True, max_length=32, null=True)),
                ('action_key', models.CharField(blank=True, max_length=512, null=True)),
                ('action_query', models.CharField(blank=True, max_length=512, null=True)),
                ('action_name', models.CharField(blank=True, max_length=128, null=True)),
                ('source', models.CharField(blank=True, max_length=32, null=True)),
                ('medium', models.CharField(blank=True, max_length=32, null=True)),
                ('campaign', models.CharField(blank=True, max_length=128, null=True)),
                ('content', models.CharField(blank=True, max_length=128, null=True)),
                ('term', models.CharField(blank=True, max_length=256, null=True)),
                ('ip', models.CharField(blank=True, max_length=64, null=True)),
                ('agent', models.CharField(blank=True, max_length=1024, null=True)),
                ('referer', models.CharField(blank=True, max_length=1024, null=True)),
                ('se', models.CharField(blank=True, max_length=32, null=True)),
                ('sek', models.CharField(blank=True, max_length=512, null=True)),
                ('device_id', models.CharField(blank=True, max_length=128, null=True)),
                ('platform', models.CharField(blank=True, max_length=128, null=True)),
                ('system', models.CharField(blank=True, max_length=128, null=True)),
                ('brand', models.CharField(blank=True, max_length=128, null=True)),
                ('model', models.CharField(blank=True, max_length=128, null=True)),
                ('network', models.CharField(blank=True, max_length=128, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WechatMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.PositiveIntegerField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=512, null=True)),
                ('keyword', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('order_number', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wechat_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WechatReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(blank=True, max_length=128, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wechat_reply',
                'managed': False,
            },
        ),
    ]
